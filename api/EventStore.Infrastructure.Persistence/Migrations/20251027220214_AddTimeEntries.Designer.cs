// <auto-generated />
using System;
using EventStore.Infrastructure.Persistence.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventStore.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(RealDbContext))]
    [Migration("20251027220214_AddTimeEntries")]
    partial class AddTimeEntries
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventStore.Infrastructure.Persistence.Entities.EventStoreRecord", b =>
                {
                    b.Property<string>("AggregateRootId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("AggregateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DomainEventName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sequence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sequence"));

                    b.HasKey("AggregateRootId", "Version");

                    b.ToTable("EventStore", "write");
                });

            modelBuilder.Entity("EventStore.Infrastructure.Persistence.Entities.Project.ReadProject", b =>
                {
                    b.Property<string>("AggregateRootId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Billable")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("AggregateRootId");

                    b.HasIndex(new[] { "Code" }, "IX_ProjectCode")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex(new[] { "Code" }, "IX_ProjectCode"), new[] { "Name", "Billable", "IsRemoved" });

                    b.ToTable("Project", "read");
                });

            modelBuilder.Entity("EventStore.Infrastructure.Persistence.Entities.Ticket.ReadTicket", b =>
                {
                    b.Property<string>("AggregateRootId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TicketPriority")
                        .HasColumnType("int");

                    b.Property<int>("TicketState")
                        .HasColumnType("int");

                    b.Property<int>("TicketType")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("AggregateRootId");

                    b.HasIndex(new[] { "UserName" }, "IX_TicketUserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex(new[] { "UserName" }, "IX_TicketUserName"), new[] { "UserId", "Title", "TicketPriority", "TicketState", "TicketType", "Version" });

                    b.ToTable("Ticket", "read");
                });

            modelBuilder.Entity("EventStore.Infrastructure.Persistence.Entities.TimeEntry.ReadTimeEntry", b =>
                {
                    b.Property<string>("AggregateRootId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ActivityType")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ProjectId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Until")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("AggregateRootId");

                    b.HasIndex("From");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.HasIndex("IsRemoved", "From");

                    b.ToTable("TimeEntry", "read");
                });

            modelBuilder.Entity("EventStore.Infrastructure.Persistence.Entities.User.ReadUser", b =>
                {
                    b.Property<string>("AggregateRootId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("AggregateRootId");

                    b.HasIndex(new[] { "UserName" }, "IX_Username")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex(new[] { "UserName" }, "IX_Username"), new[] { "FirstName", "LastName" });

                    b.ToTable("User", "read");
                });
#pragma warning restore 612, 618
        }
    }
}
